{"version":3,"sources":["CrudComponent.js","App.js","reportWebVitals.js","index.js"],"names":["x","Crudfunction","useState","user","setuser","userId","setuserId","title","settitle","body","setbody","setid","saveInProgress","setsaveInProgress","useEffect","a","axios","get","response","data","handleSubmit","e","preventDefault","updateData","createData","post","user1","push","put","id","index","findIndex","row","handleDelete","delete","filter","onSubmit","type","name","value","onChange","target","disabled","map","onClick","selectedData","onPopulateData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55cec345.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nvar x = 0;\r\nexport default function Crudfunction() {\r\n  const [user, setuser] = useState([]);\r\n  const [userId, setuserId] = useState('');\r\n  const [title, settitle] = useState('');\r\n  const [body, setbody] = useState('');\r\n  const [id, setid] = useState('');\r\n  const [saveInProgress, setsaveInProgress] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    var response = await axios.get(\r\n      'https://jsonplaceholder.typicode.com/posts'\r\n    );\r\n    await setuser(response.data);\r\n  }, []);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (x) {\r\n      updateData();\r\n    } else {\r\n      createData();\r\n    }\r\n  };\r\n\r\n  const createData = async () => {\r\n    setsaveInProgress(true);\r\n    var response = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/posts',\r\n      {\r\n        userId: userId,\r\n        title: title,\r\n        body: body,\r\n      }\r\n    );\r\n    var user1 = [...user];\r\n    user1.push(response.data);\r\n    setuser(user1);\r\n    setuserId('');\r\n    setbody('');\r\n    settitle('');\r\n    setsaveInProgress(false);\r\n  };\r\n\r\n  const updateData = async () => {\r\n    var response = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/posts/${x}`,\r\n      {\r\n        id: x,\r\n        userId: userId,\r\n        title: title,\r\n        body: body,\r\n      }\r\n    );\r\n    var index = user.findIndex((row) => row.id === x);\r\n    var user1 = [...user];\r\n    user1[index] = response.data;\r\n    setuser(user1);\r\n    setuserId('');\r\n    setbody('');\r\n    settitle('');\r\n    setid('');\r\n  };\r\n  const onPopulateData = (id) => {\r\n    var selectedData = user.filter((row) => row.id === id)[0];\r\n    x = id;\r\n    setuserId(selectedData.userId);\r\n    setbody(selectedData.body);\r\n    settitle(selectedData.title);\r\n  };\r\n  const handleDelete = async (id) => {\r\n    var response = await axios.delete(\r\n      `https://jsonplaceholder.typicode.com/posts/${id}`\r\n    );\r\n    var user1 = user.filter((row) => row.id !== id);\r\n    setuser(user1);\r\n  \r\n  };\r\n  return (\r\n    <>\r\n      <h3> User Form</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label> UserId </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userId\"\r\n            value={userId}\r\n            onChange={(e) => setuserId(e.target.value)}\r\n          />\r\n        </div>{' '}\r\n        <br />\r\n        <div>\r\n          <label> Title </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => settitle(e.target.value)}\r\n          />\r\n        </div>{' '}\r\n        <br />\r\n        <div>\r\n          <label> Body </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"body\"\r\n            value={body}\r\n            onChange={(e) => setbody(e.target.value)}\r\n          />\r\n        </div>{' '}\r\n        <br />\r\n        <button disabled={saveInProgress}> Submit </button>\r\n      </form>\r\n      <h3> Post Data </h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td> UserId </td>\r\n            <td> Title </td>\r\n            <td> Body </td>\r\n            <td> Actions </td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {user.map((data) => (\r\n            <tr key={data.id}>\r\n              <td> {data.userId} </td>\r\n              <td> {data.title} </td>\r\n              <td> {data.body} </td>\r\n              <td>\r\n                <button onClick={() => onPopulateData(data.id)}>\r\n                  {' '}\r\n                  Update{' '}\r\n                </button>{' '}\r\n                &nbsp;&nbsp;\r\n                <button onClick={() => handleDelete(data.id)}> Delete </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport CrudComponent from './CrudComponent';\n\nexport default function App() {\n  return (\n    <div>\n      <CrudComponent />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}